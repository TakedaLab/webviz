(this["webpackJsonp"] = this["webpackJsonp"] || []).push([[52],{

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/tcl/tcl.js":
/*!**********************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/tcl/tcl.js ***!
  \**********************************************************************/
/*! exports provided: conf, language */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"conf\", function() { return conf; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"language\", function() { return language; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar conf = {\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ]\n};\nvar language = {\n    tokenPostfix: '.tcl',\n    specialFunctions: [\n        'set', 'unset', 'rename', 'variable', 'proc', 'coroutine',\n        'foreach',\n        'incr', 'append',\n        'lappend', 'linsert', 'lreplace'\n    ],\n    mainFunctions: [\n        'if', 'then', 'elseif', 'else', 'case', 'switch', 'while', 'for',\n        'break', 'continue', 'return',\n        'package', 'namespace',\n        'catch', 'exit',\n        'eval', 'expr', 'uplevel', 'upvar'\n    ],\n    builtinFunctions: [\n        'file', 'info', 'concat', 'join', 'lindex',\n        'list', 'llength', 'lrange', 'lsearch', 'lsort', 'split',\n        'array', 'parray', 'binary', 'format', 'regexp', 'regsub', 'scan', 'string',\n        'subst', 'dict', 'cd', 'clock', 'exec', 'glob', 'pid', 'pwd', 'close', 'eof', 'fblocked',\n        'fconfigure', 'fcopy', 'fileevent', 'flush', 'gets', 'open', 'puts', 'read', 'seek',\n        'socket', 'tell', 'interp', 'after', 'auto_execok',\n        'auto_load', 'auto_mkindex', 'auto_reset', 'bgerror', 'error',\n        'global', 'history', 'load', 'source', 'time', 'trace',\n        'unknown', 'unset', 'update', 'vwait', 'winfo', 'wm', 'bind', 'event',\n        'pack', 'place', 'grid', 'font', 'bell', 'clipboard', 'destroy', 'focus', 'grab', 'lower',\n        'option', 'raise', 'selection', 'send', 'tk', 'tkwait', 'tk_bisque', 'tk_focusNext',\n        'tk_focusPrev', 'tk_focusFollowsMouse', 'tk_popup', 'tk_setPalette'\n    ],\n    symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n    brackets: [\n        { open: '(', close: ')', token: 'delimiter.parenthesis' },\n        { open: '{', close: '}', token: 'delimiter.curly' },\n        { open: '[', close: ']', token: 'delimiter.square' }\n    ],\n    escapes: /\\\\(?:[abfnrtv\\\\\"'\\[\\]\\{\\};\\$]|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    variables: /(?:\\$+(?:(?:\\:\\:?)?[a-zA-Z_]\\w*)+)/,\n    tokenizer: {\n        root: [\n            // identifiers and keywords\n            [/[a-zA-Z_]\\w*/, { cases: {\n                        '@specialFunctions': { token: 'keyword.flow', next: '@specialFunc' },\n                        '@mainFunctions': 'keyword',\n                        '@builtinFunctions': 'variable',\n                        '@default': 'operator.scss'\n                    } }],\n            [/\\s+\\-+(?!\\d|\\.)\\w*|{\\*}/, 'metatag'],\n            // whitespace\n            { include: '@whitespace' },\n            // delimiters and operators\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/@symbols/, 'operator'],\n            [/\\$+(?:\\:\\:)?\\{/, { token: 'identifier', next: '@nestedVariable' }],\n            [/@variables/, 'type.identifier'],\n            [/\\.(?!\\d|\\.)[\\w\\-]*/, 'operator.sql'],\n            // numbers\n            [/\\d+(\\.\\d+)?/, 'number'],\n            [/\\d+/, 'number'],\n            // delimiter\n            [/;/, 'delimiter'],\n            // strings\n            [/\"/, { token: 'string.quote', bracket: '@open', next: '@dstring' }],\n            [/'/, { token: 'string.quote', bracket: '@open', next: '@sstring' }]\n        ],\n        dstring: [\n            [/\\[/, { token: '@brackets', next: '@nestedCall' }],\n            [/\\$+(?:\\:\\:)?\\{/, { token: 'identifier', next: '@nestedVariable' }],\n            [/@variables/, 'type.identifier'],\n            [/[^\\\\$\\[\\]\"]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\"/, { token: 'string.quote', bracket: '@close', next: '@pop' }],\n        ],\n        sstring: [\n            [/\\[/, { token: '@brackets', next: '@nestedCall' }],\n            [/\\$+(?:\\:\\:)?\\{/, { token: 'identifier', next: '@nestedVariable' }],\n            [/@variables/, 'type.identifier'],\n            [/[^\\\\$\\[\\]']+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/'/, { token: 'string.quote', bracket: '@close', next: '@pop' }]\n        ],\n        whitespace: [\n            [/[ \\t\\r\\n]+/, 'white'],\n            [/#.*\\\\$/, { token: 'comment', next: '@newlineComment' }],\n            [/#.*(?!\\\\)$/, 'comment']\n        ],\n        newlineComment: [\n            [/.*\\\\$/, 'comment'],\n            [/.*(?!\\\\)$/, { token: 'comment', next: '@pop' }]\n        ],\n        nestedVariable: [\n            [/[^\\{\\}\\$]+/, 'type.identifier'],\n            [/\\}/, { token: 'identifier', next: '@pop' }]\n        ],\n        nestedCall: [\n            [/\\[/, { token: '@brackets', next: '@nestedCall' }],\n            [/\\]/, { token: '@brackets', next: '@pop' }],\n            { include: 'root' }\n        ],\n        specialFunc: [\n            [/\"/, { token: 'string', next: '@dstring' }],\n            [/'/, { token: 'string', next: '@sstring' }],\n            [/(?:(?:\\:\\:?)?[a-zA-Z_]\\w*)+/, { token: 'type', next: '@pop' }],\n        ]\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/tcl/tcl.js\n");

/***/ })

}]);